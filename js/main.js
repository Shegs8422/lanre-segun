const lenis = new Lenis({ lerp: .1 });
function raf(e) { lenis.raf(e), requestAnimationFrame(raf) }
requestAnimationFrame(raf);

const vhRem = e => window.innerHeight * (e / 100) / 16;
let scrambleCharset = "!1€5#6*=+-&$=£AF/&234$$2N€O=!",
    gsapMatchMedia = gsap.matchMedia();

function initiateHeroTitleScrambleTl() {
    gsap.timeline({ repeat: -1, repeatDelay: 2.5 })
        .to("#home--hero--title--top", { duration: 1, scrambleText: { text: "VISUAL", chars: scrambleCharset, speed: 1 } })
        .to("#home--hero--title--bottom", { duration: 1, scrambleText: { text: "DESIGNER", chars: scrambleCharset, speed: 1 } }, "<")
        .to("#home--hero--title--top", { duration: 1, scrambleText: { text: "WEBFLOW", chars: scrambleCharset, speed: 1 } }, ">2.5")
        .to("#home--hero--title--bottom", { duration: 1, scrambleText: { text: "DEVELOPER", chars: scrambleCharset, speed: 1 } }, "<")
}

function initiatePageLoadTl() {
    let e = gsap.timeline({
        onStart() { lenis.stop(), $(".content-blocker").remove() },
        onComplete() { lenis.start(), $(".nav").removeClass("is--disabled"), initiateHeroTitleScrambleTl(), initiateHomeHeroScrollTl(), initiateHomePortfolioScrollTl(), initiateHomeAboutScrollTl(), initiateHomeServicesScrollTl(), initiateHomeMusicScrollTl(), initiateFooterScrollTl() }
    });
    gsapMatchMedia.add("(min-width: 992px)", (() => { let t = new SplitText("#text--loader-block", { type: "chars", tag: "div" }); e.clear(), e.set($(".card--portfolio:eq(0)"), { width: "63.75rem", y: "-6rem" }), e.set($(".background--card--portfolio"), { width: "63.75rem", height: "35.875rem", boxShadow: "0rem 0rem 0rem 3rem #582fcd", y: "-6rem" }, "<"), e.set($(".loader-block"), { opacity: 1 }), e.from(t.chars, { duration: .25, stagger: .05, opacity: 0 }), e.to(t.chars, { duration: .75, stagger: .05, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<"), e.to($(".loader-block .caption-m.is--dot"), { duration: .75, stagger: .05, opacity: 1, width: "auto" }, "-=0.75"), null !== sessionStorage.getItem("visited") ? e.to($(".loader-block"), { duration: .125, opacity: 0 }, "+=1") : e.to($(".loader-block"), { duration: .125, opacity: 0 }, "+=2.5"), sessionStorage.setItem("visited", "true"), e.from($(".image--navbar--logo path"), { delay: .25, duration: .25, y: "125%", stagger: .05, opacity: 0, filter: "blur(1rem)", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }), e.from($(".image--navbar--logo"), { delay: .25, duration: .75, transform: "translateY(calc(50vh - 0.625rem - 3rem))", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }, ">"), e.from($(".nav-wrap"), { duration: .75, opacity: 0, transform: "translateY(-200%)", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }, "<"), e.fromTo($(".scene-container"), { scale: 3, opacity: 0, ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1"), y: "85%" }, { duration: .5, opacity: 1, scale: 4.5, y: "170%" }, "<"), e.from(".heading-wrap.is--home--hero", { duration: .5, filter: "blur(1rem)", opacity: 0, scale: .95 }, "-=0.5"), e.from(".paragraph-wrap.is--home--hero", { duration: .25, filter: "blur(0.25rem)", opacity: 0 }, "-=0.25"), e.from($(".link-block--portfolio:eq(0)"), { duration: 1, transform: "translateY(100vh)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }, "-=0.25"), e.from($(".block-wrap--portfolio.is--bg"), { duration: 1, transform: "translateY(100vh)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }, "<") })), gsapMatchMedia.add("(max-width: 991px) and (min-width: 479px)", (() => { let t = new SplitText("#text--loader-block", { type: "chars", tag: "div" }); e.clear(), e.set($(".card--portfolio:eq(0) .image--card--portfolio"), { width: "calc(100% + 3rem)", height: "calc(100vh - 11rem)", borderRadius: "0rem" }), e.set($(".card--portfolio:eq(0) .image-overlap--card--portfolio"), { width: "calc(100% + 3rem)", height: "calc(100vh - 11rem)", opacity: 0, borderRadius: "0rem" }, "<"), e.set($(".background--card--portfolio"), { width: "100vw", height: "calc(100vh - 11rem)", boxShadow: "0rem 0rem 0rem 2.5rem #582fcd" }, "<"), e.set($(".loader-block"), { opacity: 1 }), e.from(t.chars, { duration: .25, stagger: .05, opacity: 0 }), e.to(t.chars, { duration: .75, stagger: .05, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<"), e.to($(".loader-block .caption-m.is--dot"), { duration: .75, stagger: .05, opacity: 1, width: "auto" }, "-=0.75"), null !== sessionStorage.getItem("visited") ? e.to($(".loader-block"), { duration: .125, opacity: 0 }, "+=1") : e.to($(".loader-block"), { duration: .125, opacity: 0 }, "+=5"), sessionStorage.setItem("visited", "true"), e.from($(".image--navbar--logo path"), { delay: .25, duration: .25, y: "125%", stagger: .05, opacity: 0, filter: "blur(1rem)", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }), e.from($(".image--navbar--logo"), { delay: .25, duration: .75, transform: "translateY(calc(50vh - 0.625rem - 3rem))", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }, ">"), e.from($(".nav-wrap"), { duration: .75, opacity: 0, transform: "translateY(-200%)", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }, "<"), e.fromTo($(".scene-container"), { scale: 3, opacity: 0, ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1"), y: "85%" }, { duration: .5, opacity: 1, scale: 4.75, y: "170%" }, "<"), e.from(".heading-wrap.is--home--hero", { duration: .5, filter: "blur(1rem)", opacity: 0, scale: .95 }, "-=0.5"), e.from(".paragraph-wrap.is--home--hero", { duration: .25, filter: "blur(0.25rem)", opacity: 0 }, "-=0.25"), e.from($(".link-block--portfolio:eq(0)"), { duration: 1, transform: "translateY(100vh)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }, "-=0.25"), e.from($(".block-wrap--portfolio.is--bg"), { duration: 1, transform: "translateY(100vh)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }, "<") })), gsapMatchMedia.add("(max-width: 478px) and (min-width: 320px)", (() => { let t = new SplitText("#text--loader-block", { type: "chars", tag: "div" }); e.clear(), e.set($(".card--portfolio:eq(0) .image--card--portfolio"), { width: "calc(100% + 2rem)", height: "calc(100vh - 11rem)", borderRadius: "0rem" }), e.set($(".card--portfolio:eq(0) .image-overlap--card--portfolio"), { width: "calc(100% + 2rem)", height: "calc(100vh - 11rem)", opacity: 0, borderRadius: "0rem" }, "<"), e.set($(".background--card--portfolio"), { width: "calc(0rem + 2rem + 100%)", height: "calc(100vh - 11rem)", boxShadow: "0rem 0rem 0rem 2rem #582fcd" }, "<"), e.set($(".loader-block"), { opacity: 1 }), e.from(t.chars, { duration: .25, stagger: .05, opacity: 0 }), e.to(t.chars, { duration: .75, stagger: .05, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<"), e.to($(".loader-block .caption-m.is--dot"), { duration: .75, stagger: .05, opacity: 1, width: "auto" }, "-=0.75"), null !== sessionStorage.getItem("visited") ? e.to($(".loader-block"), { duration: .125, opacity: 0 }, "+=1") : e.to($(".loader-block"), { duration: .125, opacity: 0 }, "+=5"), sessionStorage.setItem("visited", "true"), e.from($(".image--navbar--logo path"), { delay: .25, duration: .25, y: "125%", stagger: .05, opacity: 0, filter: "blur(1rem)", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }), e.from($(".image--navbar--logo"), { delay: .25, duration: .75, transform: "translateY(calc(50vh - 0.625rem - 3rem))", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }, ">"), e.from($(".nav-wrap"), { duration: .75, opacity: 0, transform: "translateY(-200%)", ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1") }, "<"), e.fromTo($(".scene-container"), { scale: 3, opacity: 0, ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1"), y: "85%" }, { duration: .5, opacity: 1, scale: 5, y: "170%" }, "<"), e.from(".heading-wrap.is--home--hero", { duration: .5, filter: "blur(1rem)", opacity: 0, scale: .95 }, "-=0.5"), e.from(".paragraph-wrap.is--home--hero", { duration: .25, filter: "blur(0.25rem)", opacity: 0 }, "-=0.25"), e.from($(".link-block--portfolio:eq(0)"), { duration: 1, transform: "translateY(100vh)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }, "-=0.25"), e.from($(".block-wrap--portfolio.is--bg"), { duration: 1, transform: "translateY(100vh)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }, "<") }))
}

function initiateHomeHeroScrollTl() {
    let e = gsap.timeline({ scrollTrigger: { trigger: ".section.is--home--hero", start: "top top", end: "75%", markers: !1, scrub: !0, onLeave() { $(".card--portfolio.is--bg").addClass("is--hidden") }, onEnterBack() { $(".card--portfolio.is--bg").removeClass("is--hidden") } } });
    gsapMatchMedia.add("(min-width: 992px)", (() => { e.clear(), e.to($(".card--portfolio:eq(0)"), { width: "100%", y: "0rem" }), e.to($(".background--card--portfolio"), { width: "calc(0rem + 0rem + 100%)", height: "calc(0rem + 0rem + 100%)", boxShadow: "0rem 0rem 0rem 0rem #582fcd", y: "0rem" }, "<"), e.to(".scene-container", { scale: 2.25, y: "0%" }, "<"), e.to(".heading-wrap.is--home--hero", { opacity: 0, scale: .85, filter: "blur(2rem)", y: "2.5rem" }, "<"), e.to(".paragraph-wrap.is--home--hero", { scale: .85, filter: "blur(5rem)", y: "2.5rem" }, "<") })), gsapMatchMedia.add("(max-width: 991px) and (min-width: 479px)", (() => { e.clear(), e.to($(".card--portfolio:eq(0) .image--card--portfolio"), { width: "100%", height: "100%", borderRadius: ".75rem" }), e.to($(".card--portfolio:eq(0) .image-overlap--card--portfolio"), { width: "100%", height: "100%", borderRadius: ".75rem", opacity: 1 }, "<"), e.to($(".background--card--portfolio"), { width: "calc(100vw - 3rem)", height: "100%", boxShadow: "0rem 0rem 0rem 0rem #582fcd" }, "<"), e.to(".scene-container", { scale: 3, y: "0%" }, "<"), e.to(".heading-wrap.is--home--hero", { opacity: 0, scale: .85, filter: "blur(2rem)", y: "2.5rem" }, "<"), e.to(".paragraph-wrap.is--home--hero", { scale: .85, filter: "blur(5rem)", y: "2.5rem" }, "<") })), gsapMatchMedia.add("(max-width: 478px) and (min-width: 320px)", (() => { e.clear(), e.to($(".card--portfolio:eq(0) .image--card--portfolio"), { width: "100%", height: "calc(0rem + 0rem + 100%)", borderRadius: ".5rem" }), e.to($(".card--portfolio:eq(0) .image-overlap--card--portfolio"), { width: "100%", height: "calc(0rem + 0rem + 100%)", borderRadius: ".5rem", opacity: 1 }, "<"), e.to($(".background--card--portfolio"), { width: "calc(0rem + 0rem + 100%)", height: "calc(0rem + 0rem + 100%)", boxShadow: "0rem 0rem 0rem 0rem #582fcd", transform: "translateY(0vh)" }, "<"), e.to(".scene-container", { scale: 3, y: "0%" }, "<"), e.to(".heading-wrap.is--home--hero", { opacity: 0, scale: .85, opacity: 0, filter: "blur(2rem)", y: "2.5rem" }, "<"), e.to(".paragraph-wrap.is--home--hero", { scale: .85, opacity: 0, filter: "blur(5rem)", y: "2.5rem" }, "<") }))
}

function initiateHomePortfolioScrollTl() {
    $(".item-wrap--portfolio").each((function(e) {
        let t = gsap.timeline({ scrollTrigger: { trigger: $(this), start: "-75% top", end: "50%", markers: !1, scrub: !0 } });
        gsapMatchMedia.add("(min-width: 992px)", (() => { t.clear(), e > 0 && (t.set($(this).find(".card--portfolio"), { width: "100%" }), $(this).prev().length > 0 && t.to($(this).prev(), { y: "-2.5rem" }, "<").to($(this).prev().find(".card--portfolio"), { width: "calc(100% - 4rem)" }, "<").to($(this).prev().find(".image--card--portfolio"), { opacity: .5 }, "<").to($(this).prev().find(".block--item-wrap--portfolio--description"), { filter: "blur(2rem)", y: "-1.75rem", scale: .85, opacity: 0 }, "<"), e > 1 && ($(this).prev().prev().length > 0 && t.to($(this).prev().prev(), { y: "-5rem" }, "<").to($(this).prev().prev().find(".card--portfolio"), { width: "calc(100% - 8rem)" }, "<").to($(this).prev().prev().find(".image--card--portfolio"), { opacity: .25 }, "<"), e > 2 && $(this).prev().prev().prev().length > 0 && t.to($(this).prev().prev().prev(), { y: "-7.5rem", opacity: 0 }, "<").to($(this).prev().prev().prev().find(".card--portfolio"), { width: "calc(100% - 12rem)" }, "<"))) })), gsapMatchMedia.add("(max-width: 991px) and (min-width: 479px)", (() => { t.clear(), e > 0 && ($(this).prev().length > 0 && t.to($(this).prev(), { y: "-2rem" }, "<").to($(this).prev().find(".card--portfolio"), { width: "calc(100% - 3rem)" }, "<").to($(this).prev().find(".image--card--portfolio"), { opacity: .5 }, "<").to($(this).prev().find(".block--item-wrap--portfolio--description"), { filter: "blur(2rem)", y: "-1.75rem", scale: .85, opacity: 0 }, "<"), e > 1 && ($(this).prev().prev().length > 0 && t.to($(this).prev().prev(), { y: "-4rem" }, "<").to($(this).prev().prev().find(".card--portfolio"), { width: "calc(100% - 6rem)" }, "<").to($(this).prev().prev().find(".image--card--portfolio"), { opacity: .25 }, "<"), e > 2 && $(this).prev().prev().prev().length > 0 && t.to($(this).prev().prev().prev(), { y: "-6rem", opacity: 0 }, "<").to($(this).prev().prev().prev().find(".card--portfolio"), { width: "calc(100% - 9rem)" }, "<"))) })), gsapMatchMedia.add("(max-width: 478px) and (min-width: 320px)", (() => { t.clear(), e > 0 && ($(this).prev().length > 0 && t.to($(this).prev(), { y: "-1.25rem" }, "<").to($(this).prev().find(".card--portfolio"), { width: "calc(100% - 2rem)" }, "<").to($(this).prev().find(".image--card--portfolio"), { opacity: .5 }, "<").to($(this).prev().find(".block--item-wrap--portfolio--description"), { filter: "blur(2rem)", y: "-1.75rem", scale: .85, opacity: 0 }, "<"), e > 1 && ($(this).prev().prev().length > 0 && t.to($(this).prev().prev(), { y: "-2.5rem" }, "<").to($(this).prev().prev().find(".card--portfolio"), { width: "calc(100% - 4rem)" }, "<").to($(this).prev().prev().find(".image--card--portfolio"), { opacity: .25 }, "<"), e > 2 && $(this).prev().prev().prev().length > 0 && t.to($(this).prev().prev().prev(), { y: "-3.25rem", opacity: 0 }, "<").to($(this).prev().prev().prev().find(".card--portfolio"), { width: "calc(100% - 6rem)" }, "<"))) }))
    }))
}

function initiateHomeAboutScrollTl() {
    let e = new SplitText("#title--about", { type: "chars", tag: "span" }),
        t = new SplitText(".card--home--about .heading-l", { type: "chars", tag: "div" }),
        r = new SplitText(".card--home--about .caption-m", { type: "lines", tag: "span" }),
        a = new SplitText("#subtitle--about--paragraph", { type: "chars", tag: "span" }),
        o = new SplitText("#paragraph--about", { type: "lines, words", tag: "span" }),
        i = new SplitText("#subtitle--about--testimonials", { type: "chars", tag: "span" });
    gsap.utils.toArray(".grid--12x.is--about").forEach(((s, c) => {
        let l = gsap.timeline({ scrollTrigger: { trigger: s, start: "top bottom", end: "bottom", markers: !1, scrub: !1 } });
        0 == c ? l.from(e.chars, { duration: .25, stagger: .1, opacity: 0 }).to(e.chars, { duration: .25, stagger: .1, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<").from(".card--home--about", { duration: .25, stagger: .1, ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"), opacity: 0, y: "25%", rotateX: -60 }, "-=0.5").from(t.chars, { duration: .25, stagger: .1, ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"), opacity: 0, y: "25%" }, "-=0.25").from(r.lines, { duration: .25, stagger: .1, opacity: 0 }, "<").to(r.lines, { duration: .25, stagger: .1, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<") : 1 == c ? l.from(a.chars, { duration: .25, stagger: .05, opacity: 0 }).to(a.chars, { duration: .75, stagger: .05, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<").from(o.lines, { duration: .25, stagger: .1, opacity: 0 }, "-=0.75").to(o.words, { duration: 1, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<") : 2 == c && l.from(i.chars, { duration: .25, stagger: .05, opacity: 0 }).to(i.chars, { duration: .75, stagger: .05, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<").from(".card--home--about--testimonial", { duration: .25, stagger: .1, ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"), opacity: 0, x: "2rem" }, "-=0.5").from(".slider-pagination", { duration: .25, opacity: 0 }, "-=0.5")
    }))
}

function initiateHomeServicesScrollTl() {
    let e = new SplitText("#title--services", { type: "chars", tag: "span" }),
        t = new SplitText("#paragraph--services", { type: "lines, words", tag: "span" });
    gsap.utils.toArray(".grid--12x.is--services").forEach(((r, a) => {
        let o = gsap.timeline({ scrollTrigger: { trigger: r, start: "top bottom", end: "bottom", markers: !1, scrub: !1 } });
        0 == a ? o.from(e.chars, { duration: .25, stagger: .1, opacity: 0 }).from(t.lines, { duration: .25, stagger: .1, opacity: 0 }, "-=0.5").to(t.words, { duration: 1, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<") : 1 == a && o.from(".card--home--services", { delay: .25, duration: .5, stagger: .1, ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"), opacity: 0, y: "25%", rotateX: -60 })
    }))
}

function initiateHomeMusicScrollTl() {
    let e = new SplitText("#title--music", { type: "chars", tag: "span" }),
        t = new SplitText("#paragraph--music", { type: "lines, words", tag: "span" });
    gsap.utils.toArray(".music-header").forEach(((r, a) => { // Corrected selector
        let o = gsap.timeline({ scrollTrigger: { trigger: r, start: "top bottom", end: "bottom", markers: !1, scrub: !1 } });
        o.from(e.chars, { duration: .25, stagger: .1, opacity: 0 })
         .from(t.lines, { duration: .25, stagger: .1, opacity: 0 }, "-=0.5")
         .to(t.words, { duration: 1, scrambleText: { text: "{original}", chars: scrambleCharset, speed: 1 } }, "<");
    }));
    gsap.from(".music-grid .grid-item", { // Animate grid items
        scrollTrigger: {
            trigger: ".music-grid",
            start: "top bottom",
            end: "bottom",
            markers: !1,
            scrub: !1
        },
        delay: .25,
        duration: .5,
        stagger: .1,
        ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"),
        opacity: 0,
        y: "25%",
        rotateX: -60
    });
}

function initiateFooterScrollTl() {
    gsapMatchMedia.add("(max-width: 991px) and (min-width: 479px)", (() => { let e = gsap.timeline({ scrollTrigger: { trigger: ".anchor", start: "top bottom", end: "bottom bottom", markers: !1, scrub: !1, toggleActions: "play none none reverse" } }); e.clear(), e.to(".nav-wrap", { duration: .2, transform: "translateY(-3.375rem)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }) })), gsapMatchMedia.add("(max-width: 478px) and (min-width: 320px)", (() => { let e = gsap.timeline({ scrollTrigger: { trigger: ".anchor", start: "top bottom", end: "bottom bottom", markers: !1, scrub: !1, toggleActions: "play none none reverse" } }); e.clear(), e.to(".nav-wrap", { duration: .2, transform: "translateY(-3rem)", ease: CustomEase.create("easeOutQuint", "0.22, 1, 0.36, 1") }) }))
}

document.querySelectorAll(".card--home--services").forEach((e => { e.addEventListener("click", (() => { setTimeout((() => { ScrollTrigger.refresh() }), 500) })) }));

gsap.utils.toArray(".button--footer--book_a_call .content-wrap--button--footer--book_a_call").forEach((e => { e.addEventListener("mouseenter", (() => { gsap.to(e, { ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"), width: "calc(100% - 1rem)", height: "calc(100% - 1rem)", boxShadow: "inset 0 0 2rem rgba(248,247,244,0.15)", backgroundImage: "linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), linear-gradient(rgba(248, 247, 244, 0.25), rgba(248, 247, 244, 0.25))" }) })), e.addEventListener("mouseleave", (() => { gsap.to(e, { ease: CustomEase.create("easeOutCubic", "0.33, 1, 0.68, 1"), width: "calc(100% - 0rem)", height: "calc(100% - 0rem)", boxShadow: "inset 0 0 2rem rgba(248,247,244,0)", backgroundImage: "linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), linear-gradient(rgba(248, 247, 244, 0.15), rgba(248, 247, 244, 0.15))" }) })) }));

gsap.utils.toArray(".link-block--footer--social").forEach((e => { e.addEventListener("mouseenter", (() => { gsap.to($(e).find(".icon-wrap--social"), { ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"), y: "-100%" }) })), e.addEventListener("mouseleave", (() => { gsap.to($(e).find(".icon-wrap--social"), { ease: CustomEase.create("easeOutQuart", "0.25, 1, 0.5, 1"), y: "0%" }) })) }));

gsap.utils.toArray(".button").forEach((e => { let t = $(e).text(); e.addEventListener("mouseenter", (() => { gsap.to($(e).find(".caption-m"), { duration: .5, scrambleText: { text: t, chars: scrambleCharset, speed: 1 } }) })) }));

gsap.utils.toArray(".button.is--404").forEach((e => { e.addEventListener("mouseenter", (() => { gsap.to($(e).find(".caption-m"), { duration: .5, scrambleText: { text: "GO HOME", chars: scrambleCharset, speed: 1 } }) })), e.addEventListener("mouseleave", (() => { gsap.to($(e).find(".caption-m"), { duration: .5, scrambleText: { text: "WAKE UP", chars: scrambleCharset, speed: 1 } }) })) }));

gsap.utils.toArray(".text-link--menu").forEach((e => { let t = $(e).text(); e.addEventListener("mouseenter", (() => { gsap.to(e, { duration: .5, scrambleText: { text: t, chars: scrambleCharset, speed: 1 } }) })) }));

gsap.utils.toArray(".link-block--footer--contact").forEach((e => { let t = $(e).find(".text--footer--link").text(); e.addEventListener("mouseenter", (() => { gsap.to($(e).find(".text--footer--link"), { duration: .5, scrambleText: { text: t, chars: scrambleCharset, speed: 1 } }) })) }));

$(document).ready((function() { 0 == lenis.scroll ? initiatePageLoadTl() : lenis.scrollTo(0, { lock: !0, force: !0, duration: .4, onComplete() { initiatePageLoadTl() } }) }));

var swiper = new Swiper(".swiper", { grabCursor: !0, effect: "cards", grabCursor: !0, cardsEffect: { perSlideRotate: 0 }, pagination: { el: ".swiper-pagination", type: "bullets" } });

document.addEventListener("DOMContentLoaded", (function() { new Splide(".slider.is--footer--book_a_call", { type: "loop", gap: "4rem", drag: !1, arrows: !1, pagination: !1, autoWidth: !0, clones: 3, breakpoints: { 991: { gap: "2rem" }, 767: { gap: "1.5rem" } }, autoScroll: { speed: 1, pauseOnHover: !1, pauseOnFocus: !1 } }).mount(window.splide.Extensions) }));

$(".link-block--footer--contact.is--copy").on("click", (function() { navigator.clipboard.writeText("olanrewajuoluwasegun51@gmail.com") }));

navigator.platform.indexOf("Win") > -1 && document.querySelectorAll(".heading-l.is--card--home--about").forEach((function(e) { e.style.overflow = "visible" }));